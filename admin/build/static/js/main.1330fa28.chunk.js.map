{"version":3,"sources":["services/services.js","hooks/hooks.js","Login.js","components/Header.js","components/RightIcon.js","components/LeftIcon.js","components/InventoryIcon.js","components/OrdersIcon.js","components/MetricsIcon.js","components/SideNav.js","components/Trash.js","components/InventoryItem.js","components/Spinner.js","components/Filter.js","components/Inventory.js","components/Order.js","components/Orders.js","Dashboard.js","components/Modal.js","App.js","index.js"],"names":["API_ENDPOINT","login","username","password","a","axios","post","get","token","headers","Authorization","updateOrder","order","put","id","delete","item","useField","type","initial","placeholder","useState","value","setFieldVal","onChange","e","target","StyledLogin","styled","main","StyledForm","form","StyledLabel","label","StyledMessage","p","props","failedLogin","StyledButton","button","Login","setToken","setUser","setFailedLogin","usernameInput","passwordInput","handleFailedLogin","setTimeout","handleSuccessfulLogin","data","name","localStorage","setItem","handleSubmit","preventDefault","then","catch","useEffect","storedToken","getItem","storedUser","onSubmit","htmlFor","disabled","className","StyledHeader","header","StyledH3","h3","Header","text","logout","onClick","RightIcon","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","LeftIcon","InventoryIcon","x1","y1","x2","y2","OrdersIcon","d","MetricsIcon","StyledNav","nav","showFull","StyledUl","ul","StyledLi","li","StyledNavButton","SideNav","setPage","page","inv","orders","setShowFull","Trash","StyledImg","img","StyledName","StyledAttr","grow","InventoryItem","setShowModal","setInv","quantity","setQuantity","active","setActive","price","setPrice","handler","key","setter","event","updateItem","console","log","handleQuantity","handleActive","handlePrice","src","images","sm_a","alt","size","color","min","step","checked","heading","ok","reply","filter","i","Spinner","StyledFiltersContainer","div","StyledFilters","Filter","filters","map","StyledPage","Inventory","showFF","setShowFF","showPF","setShowPF","showCF","setShowCF","ff","pf","cf","hasPaid","hasShipped","StyledAddress","address","StyledItems","StyledDate","span","StyledDiv","Order","setOrders","handleDeleteSuccess","response","o","handleDeleteFailure","error","Date","createdOn","toLocaleString","total","items","href","email","streetAddress","city","state","zip","toUpperCase","country","updatedAttributes","choice","deleteOrder","Orders","setFilter","showAll","setShowAll","ordersToShow","Object","entries","val","StyledDashboard","Dashboard","numOrders","length","numInv","StyledBlur","showModal","StyledBlock","StyledModal","section","StyledText","StyledButtons","Modal","children","App","getInv","getOrders","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1330fa28.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst API_ENDPOINT = 'https://zircus.herokuapp.com/api'\n// const API_ENDPOINT = 'http://localhost:3000/api'\n\nexport async function login(username, password) {\n    return await axios.post(`${API_ENDPOINT}/login`, {\n        username,\n        password,\n    })\n}\n\nexport async function getInv() {\n    return await axios.get(`${API_ENDPOINT}/inv`)\n}\n\nexport async function getOrders(token) {\n    return await axios.get(`${API_ENDPOINT}/orders`, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    })\n}\n\nexport async function updateOrder(order, token) {\n    return await axios.put(`${API_ENDPOINT}/orders/${order.id}`, order, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    })\n}\n\nexport async function deleteOrder(id, token) {\n    return await axios.delete(`${API_ENDPOINT}/orders/${id}`, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    })\n}\n\nexport async function updateItem(item, token) {\n    return await axios.put(`${API_ENDPOINT}/inv`, item, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    })\n}\n","import { useState } from 'react'\n\nexport function useField(type, initial, placeholder) {\n    const [value, setFieldVal] = useState(initial)\n    return [\n        {\n            type,\n            value,\n            onChange: e => setFieldVal(e.target.value),\n            placeholder,\n        },\n        () => setFieldVal(initial),\n    ]\n}\n","import styled from 'styled-components'\nimport { useEffect, useState } from 'react'\nimport { login } from './services/services.js'\nimport { useField } from './hooks/hooks.js'\n\nconst StyledLogin = styled.main`\n    width: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    align-items: center;\n`\n\nconst StyledForm = styled.form`\n    margin-top: var(--base-spacing);\n    padding: var(--md-spacing);\n    background-color: var(--gray-20);\n    border-radius: var(--big-radius);\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 0.5rem;\n`\n\nconst StyledLabel = styled.label`\n    display: flex;\n    flex-flow: column nowrap;\n`\n\nconst StyledMessage = styled.p`\n    color: ${props => (props.failedLogin ? 'var(--red)' : 'var(--text-color)')};\n    margin: var(--base-spacing) 0;\n    font-weight: 500;\n`\n\nconst StyledButton = styled.button`\n    margin-top: 0.5rem;\n`\n\nexport default function Login({ setToken, setUser }) {\n    const [failedLogin, setFailedLogin] = useState(false)\n    const [usernameInput] = useField('text', '')\n    const [passwordInput] = useField('password', '')\n\n    const handleFailedLogin = () => {\n        setFailedLogin(true)\n        setTimeout(() => {\n            setFailedLogin(false)\n        }, 2000)\n    }\n\n    const handleSuccessfulLogin = ({ data }) => {\n        setUser(data.name)\n        setToken(data.token)\n        localStorage.setItem('user', data.name)\n        localStorage.setItem('token', data.token)\n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        login(usernameInput.value, passwordInput.value)\n            .then(handleSuccessfulLogin)\n            .catch(handleFailedLogin)\n    }\n\n    useEffect(() => {\n        const storedToken = localStorage.getItem('token')\n        const storedUser = localStorage.getItem('user')\n        if (storedToken) setToken(storedToken)\n        if (storedUser) setUser(storedUser)\n    }, [setToken, setUser])\n\n    return (\n        <StyledLogin>\n            <StyledForm onSubmit={handleSubmit}>\n                <h1>Zircus Admin</h1>\n                <StyledMessage failedLogin={failedLogin}>\n                    {failedLogin ? 'Login failed' : 'Please Log in:'}\n                </StyledMessage>\n                <StyledLabel htmlFor=\"username\">\n                    <span>Username</span>\n                    <input\n                        {...usernameInput}\n                        disabled={failedLogin ? true : false}\n                    />\n                </StyledLabel>\n                <StyledLabel htmlFor=\"password\">\n                    <span>Password</span>\n                    <input\n                        {...passwordInput}\n                        disabled={failedLogin ? true : false}\n                    />\n                </StyledLabel>\n                <StyledButton\n                    className=\"button\"\n                    type=\"submit\"\n                    disabled={failedLogin ? true : false}\n                >\n                    {failedLogin ? 'Please wait' : 'Log in'}\n                </StyledButton>\n            </StyledForm>\n        </StyledLogin>\n    )\n}\n","import styled from 'styled-components'\n\nconst StyledHeader = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 4rem;\n    background: var(--dgray-80);\n    padding: var(--base-spacing);\n`\n\nconst StyledH3 = styled.h3`\n    color: var(--invert-text-color);\n`\n\nexport default function Header({ text, logout }) {\n    return (\n        <StyledHeader>\n            <StyledH3>{text}</StyledH3>\n            <button\n                className=\"button light outline\"\n                type=\"button\"\n                onClick={logout}\n            >\n                logout\n            </button>\n        </StyledHeader>\n    )\n}\n","export default function RightIcon() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        >\n            <polyline points=\"13 17 18 12 13 7\"></polyline>\n            <polyline points=\"6 17 11 12 6 7\"></polyline>\n        </svg>\n    )\n}\n","export default function LeftIcon() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        >\n            <polyline points=\"11 17 6 12 11 7\"></polyline>\n            <polyline points=\"18 17 13 12 18 7\"></polyline>\n        </svg>\n    )\n}\n","export default function InventoryIcon() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        >\n            <line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\n            <line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line>\n            <line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line>\n            <line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line>\n            <line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line>\n            <line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line>\n        </svg>\n    )\n}\n","export default function OrdersIcon() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        >\n            <path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"></path>\n            <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\n            <path d=\"M16 10a4 4 0 0 1-8 0\"></path>\n        </svg>\n    )\n}\n","export default function MetricsIcon() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        >\n            <polyline points=\"23 6 13.5 15.5 8.5 10.5 1 18\"></polyline>\n            <polyline points=\"17 6 23 6 23 12\"></polyline>\n        </svg>\n    )\n}\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport RightIcon from './RightIcon.js'\nimport LeftIcon from './LeftIcon.js'\nimport InventoryIcon from './InventoryIcon.js'\nimport OrdersIcon from './OrdersIcon.js'\nimport MetricsIcon from './MetricsIcon.js'\n\nconst StyledNav = styled.nav`\n    position: fixed;\n    top: 4rem;\n    left: 0;\n    bottom: 0;\n    width: ${props => (props.showFull ? '12rem' : '4rem')};\n    border-right: 2px solid var(--gray-20);\n`\n\nconst StyledUl = styled.ul`\n    list-style: none;\n    display: flex;\n    gap: var(--base-unit);\n    flex-flow: column nowrap;\n    padding: var(--base-unit) var(--base-unit) 0 var(--base-unit) !important;\n`\n\nconst StyledLi = styled.li`\n    width: 100%;\n    display: flex;\n`\n\nconst StyledButton = styled.button`\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    ${props => props.showFull && 'gap: calc(var(--base-unit) * 1.5);'}\n    justify-content: ${props => (props.showFull ? 'left' : 'center')};\n    ${props => !props.showFull && 'padding: var(--input-padding);'}\n\n    svg {\n        height: 1.25rem;\n    }\n`\n\nconst StyledNavButton = styled.button`\n    width: 100%;\n    padding: var(--base-unit);\n    display: flex;\n    justify-content: ${props => (props.showFull ? 'flex-end' : 'center')};\n    align-items: center;\n    background: transparent;\n    border: none;\n    outline: none;\n\n    &:hover,\n    &:focus {\n        background-color: var(--gray-20);\n        cursor: pointer;\n    }\n\n    svg {\n        height: 1.5rem;\n    }\n`\n\nexport default function SideNav({\n    setPage,\n    page,\n    inv,\n    orders,\n    showFull,\n    setShowFull,\n}) {\n    return (\n        <StyledNav showFull={showFull}>\n            <StyledNavButton\n                showFull={showFull}\n                type=\"button\"\n                onClick={() => setShowFull(!showFull)}\n            >\n                {showFull ? <LeftIcon /> : <RightIcon />}\n            </StyledNavButton>\n            <StyledUl>\n                <StyledLi>\n                    <StyledButton\n                        showFull={showFull}\n                        className={\n                            page === 'inventory' ? 'button' : 'button outline'\n                        }\n                        onClick={() => setPage('inventory')}\n                    >\n                        <InventoryIcon />\n                        {showFull && `Inventory (${inv})`}\n                    </StyledButton>\n                </StyledLi>\n                <StyledLi>\n                    <StyledButton\n                        showFull={showFull}\n                        className={\n                            page === 'orders' ? 'button' : 'button outline'\n                        }\n                        onClick={() => setPage('orders')}\n                    >\n                        <OrdersIcon />\n                        {showFull && `Orders (${orders})`}\n                    </StyledButton>\n                </StyledLi>\n                <StyledLi>\n                    <StyledButton\n                        showFull={showFull}\n                        className={\n                            page === 'metrics' ? 'button' : 'button outline'\n                        }\n                        onClick={() => setPage('metrics')}\n                    >\n                        <MetricsIcon />\n                        {showFull && 'Metrics'}\n                    </StyledButton>\n                </StyledLi>\n            </StyledUl>\n        </StyledNav>\n    )\n}\n","export default function Trash() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        >\n            <polyline points=\"3 6 5 6 21 6\"></polyline>\n            <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n        </svg>\n    )\n}\n","import styled from 'styled-components'\nimport { useState } from 'react'\nimport Trash from './Trash.js'\nimport { updateItem } from '../services/services.js'\n\nconst StyledLi = styled.li`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    gap: 2rem;\n    @media screen and (min-width: 1281px) {\n        gap: 3rem;\n    }\n    border-top: 2px solid var(--gray-20);\n    padding: 1rem;\n\n    &:hover {\n        background-color: var(--gray-20);\n    }\n`\n\nconst StyledImg = styled.img`\n    max-height: 2rem;\n`\n\nconst StyledName = styled.p`\n    font-size: 1rem;\n`\n\nconst StyledAttr = styled.p`\n    font-weight: 500;\n    ${props => props.grow && 'flex-grow: 1;'}\n`\n\nconst StyledLabel = styled.label`\n    display: flex;\n    align-items: center;\n    margin: 0;\n    gap: 0.5rem;\n`\n\nexport default function InventoryItem({\n    item,\n    token,\n    setShowModal,\n    setInv,\n    inv,\n}) {\n    const [quantity, setQuantity] = useState(item.quantity)\n    const [active, setActive] = useState(item.active)\n    const [price, setPrice] = useState(item.price)\n\n    const handleDelete = () => {\n        setShowModal({\n            heading: 'Confirm deletion',\n            text: `Delete inventory item ${item.type}?`,\n            ok: reply => {\n                if (reply) setInv(inv.filter(i => i.type !== item.type))\n            },\n        })\n    }\n\n    const handler = (key, setter) => event => {\n        setter(event.target.value)\n        updateItem({ ...item, [key]: event.target.value }, token).catch(e =>\n            console.log(e)\n        )\n    }\n\n    const handleQuantity = handler('quantity', setQuantity)\n    const handleActive = handler('active', setActive)\n    const handlePrice = handler('price', setPrice)\n\n    return (\n        <StyledLi>\n            <StyledImg\n                src={`https://zircus.netlify.app/${item.images.sm_a}`}\n                alt={item.name}\n                className=\"inventory__item__img\"\n            />\n            <StyledName>{item.name}</StyledName>\n            <StyledAttr>{item.size}</StyledAttr>\n            <StyledAttr grow={true}>{item.color}</StyledAttr>\n            <StyledLabel htmlFor={`${item.id}-price`}>\n                <StyledAttr>price</StyledAttr>\n                <input\n                    min=\"0\"\n                    step=\"1\"\n                    size=\"5\"\n                    type=\"number\"\n                    id={`${item.id}-price`}\n                    value={price}\n                    onChange={handlePrice}\n                />\n            </StyledLabel>\n            <StyledLabel htmlFor={`${item.id}-quantity`}>\n                <StyledAttr>quantity</StyledAttr>\n                <input\n                    min=\"0\"\n                    step=\"1\"\n                    size=\"5\"\n                    type=\"number\"\n                    id={`${item.id}-quantity`}\n                    value={quantity}\n                    onChange={handleQuantity}\n                />\n            </StyledLabel>\n            <StyledLabel htmlFor=\"active\">\n                <StyledAttr>active</StyledAttr>\n                <input\n                    type=\"checkbox\"\n                    checked={active ? true : false}\n                    onChange={handleActive}\n                />\n            </StyledLabel>\n            <button\n                type=\"button\"\n                className=\"button danger icon-button\"\n                onClick={handleDelete}\n            >\n                <Trash />\n            </button>\n        </StyledLi>\n    )\n}\n","export default function Spinner() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"icon\"\n        >\n            <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"6\"></line>\n            <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"22\"></line>\n            <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\"></line>\n            <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\"></line>\n            <line x1=\"2\" y1=\"12\" x2=\"6\" y2=\"12\"></line>\n            <line x1=\"18\" y1=\"12\" x2=\"22\" y2=\"12\"></line>\n            <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\"></line>\n            <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\"></line>\n        </svg>\n    )\n}\n","import styled from 'styled-components'\n\nconst StyledFiltersContainer = styled.div`\n    position: fixed;\n    right: calc(var(--base-unit) + 15px);\n    top: calc(4rem + var(--base-unit));\n    height: 4rem;\n    padding: var(--base-unit) calc(var(--base-unit) * 2);\n    background-color: var(--gray-10);\n    border-radius: var(--radius);\n    border: 2px solid var(--gray-20);\n    display: flex;\n    align-items: center;\n    gap: var(--base-unit);\n`\n\nconst StyledFilters = styled.div`\n    display: flex;\n    gap: var(--base-unit);\n`\n\nconst StyledH3 = styled.h3`\n    font-size: 1rem;\n`\n\nconst StyledButton = styled.button`\n    border-color: ${props =>\n        props.active ? 'var(--green)' : 'var(--gray-50)'};\n    &:hover,\n    &:focus {\n        background-color: var(--gray-20);\n        color: var(--dgray-90);\n    }\n`\n\nexport default function Filter({ filters }) {\n    return (\n        <StyledFiltersContainer>\n            <StyledH3>Show</StyledH3>\n            <StyledFilters>\n                {filters &&\n                    filters.map(filter => (\n                        <StyledButton\n                            type=\"button\"\n                            className=\"button outline\"\n                            active={filter.active}\n                            onClick={filter.setActive}\n                        >\n                            {filter.text}\n                        </StyledButton>\n                    ))}\n            </StyledFilters>\n        </StyledFiltersContainer>\n    )\n}\n","import styled from 'styled-components'\nimport { useState } from 'react'\nimport InventoryItem from './InventoryItem.js'\nimport Spinner from './Spinner.js'\nimport Filter from './Filter.js'\n\nconst StyledPage = styled.main`\n    overflow-y: scroll;\n    padding-top: calc(4rem + var(--base-unit) * 2);\n`\n\nexport default function Inventory({ inv, token, setShowModal, setInv }) {\n    const [showFF, setShowFF] = useState(true)\n    const [showPF, setShowPF] = useState(true)\n    const [showCF, setShowCF] = useState(true)\n\n    const filters = [\n        {\n            active: showFF,\n            text: 'Flat front',\n            setActive: () => setShowFF(!showFF),\n        },\n        {\n            active: showPF,\n            text: 'Pouch front',\n            setActive: () => setShowPF(!showPF),\n        },\n        {\n            active: showCF,\n            text: 'Compression front',\n            setActive: () => setShowCF(!showCF),\n        },\n    ]\n\n    return (\n        <StyledPage>\n            <Filter filters={filters} />\n            <ul className=\"inv\">\n                {inv &&\n                    showFF &&\n                    inv.ff.map(item => (\n                        <InventoryItem\n                            item={item}\n                            key={item.id}\n                            token={token}\n                            setShowModal={setShowModal}\n                            setInv={ff => setInv({ ...inv, ff })}\n                            inv={inv.ff}\n                        />\n                    ))}\n                {inv &&\n                    showPF &&\n                    inv.pf.map(item => (\n                        <InventoryItem\n                            item={item}\n                            key={item.id}\n                            token={token}\n                            setShowModal={setShowModal}\n                            setInv={pf => setInv({ ...inv, pf })}\n                            inv={inv.pf}\n                        />\n                    ))}\n                {inv &&\n                    showCF &&\n                    inv.cf.map(item => (\n                        <InventoryItem\n                            item={item}\n                            key={item.id}\n                            token={token}\n                            setShowModal={setShowModal}\n                            setInv={cf => setInv({ ...inv, cf })}\n                            inv={inv.cf}\n                        />\n                    ))}\n                {!inv && (\n                    <li id=\"spinner\" className=\"spinner\">\n                        <Spinner />\n                    </li>\n                )}\n            </ul>\n        </StyledPage>\n    )\n}\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { updateOrder, deleteOrder } from '../services/services.js'\n\nconst StyledLi = styled.li`\n    display: flex;\n    gap: 2rem;\n    @media screen and (min-width: 1281px) {\n        gap: 4rem;\n    }\n    padding: var(--base-spacing);\n    width: 100%;\n    border-left: 0.5rem solid\n        ${props =>\n            props.hasPaid && props.hasShipped\n                ? 'var(--green)'\n                : props.hasPaid\n                ? 'var(--yellow)'\n                : 'var(--gray-20)'};\n\n    &:hover {\n        background-color: var(--gray-20);\n    }\n`\n\nconst StyledAddress = styled.address`\n    flex-grow: 1;\n`\n\nconst StyledItems = styled.div``\n\nconst StyledDate = styled.span`\n    font-size: 1.125rem;\n    font-weight: 500;\n    display: block;\n    margin-bottom: var(--base-unit);\n`\n\nconst StyledDiv = styled.div`\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 1rem;\n`\n\nexport default function Order({ order, token, setShowModal, setOrders }) {\n    const handleDeleteSuccess = ({ data }) => {\n        setShowModal({\n            heading: 'Success',\n            text: data.response,\n            ok: () =>\n                setOrders()(orders => orders.filter(o => o.id !== order.id)),\n        })\n    }\n    const handleDeleteFailure = ({ data }) => {\n        setShowModal({\n            heading: 'Error',\n            text: data.error,\n            ok: () => {},\n        })\n    }\n    const handleDelete = () => {\n        setShowModal({\n            heading: 'Confirm deletion',\n            text: `Delete ${order.name}'s order?'`,\n            ok: choice => {\n                if (choice)\n                    deleteOrder(order.id, token)\n                        .then(handleDeleteSuccess)\n                        .catch(handleDeleteFailure)\n            },\n        })\n    }\n\n    const updatePaid = () =>\n        updateOrder(\n            {\n                id: order.id,\n                updatedAttributes: {\n                    hasPaid: !order.hasPaid,\n                },\n            },\n            token\n        )\n            .then(() =>\n                setOrders()(orders =>\n                    orders.map(o =>\n                        o.id === order.id ? { ...o, hasPaid: !o.hasPaid } : o\n                    )\n                )\n            )\n            .catch(e => console.log(e))\n\n    const updateShipped = () =>\n        updateOrder(\n            {\n                id: order.id,\n                updatedAttributes: {\n                    hasShipped: !order.hasShipped,\n                },\n            },\n            token\n        )\n            .then(() =>\n                setOrders()(orders =>\n                    orders.map(o =>\n                        o.id === order.id\n                            ? { ...o, hasShipped: !o.hasShipped }\n                            : o\n                    )\n                )\n            )\n            .catch(e => console.log(e))\n\n    return (\n        <StyledLi hasPaid={order.hasPaid} hasShipped={order.hasShipped}>\n            <div>\n                <StyledDate>\n                    {new Date(order.createdOn).toLocaleString('en-US')}\n                </StyledDate>\n                <ul>\n                    <li>\n                        Has paid:{' '}\n                        <strong>{order.hasPaid ? 'Yes' : 'No'}</strong>\n                    </li>\n                    <li>\n                        Has shipped:{' '}\n                        <strong>{order.hasShipped ? 'Yes' : 'No'}</strong>\n                    </li>\n                    <li>\n                        <strong>${order.total}</strong>\n                    </li>\n                </ul>\n            </div>\n            <StyledItems>\n                <StyledDate>Items</StyledDate>\n                <ul>\n                    {order.items.map(item => (\n                        <li key={item.type}>\n                            {item.type} x {item.quantity}\n                        </li>\n                    ))}\n                </ul>\n            </StyledItems>\n            <StyledAddress>\n                <strong>{order.name}</strong>\n                <br />\n                <a href={`mailto:${order.email}`}>{order.email}</a>\n                <br />\n                {order.streetAddress}\n                <br />\n                {order.city} {order.state}\n                <br />\n                {order.zip.toUpperCase()} {order.country}\n                <br />\n            </StyledAddress>\n            <StyledDiv>\n                <button\n                    className=\"button outline\"\n                    type=\"button\"\n                    onClick={updatePaid}\n                >\n                    {order.hasPaid ? 'Set Not Paid' : 'Set Paid'}\n                </button>\n                <button\n                    className=\"button positive outline\"\n                    type=\"button\"\n                    onClick={updateShipped}\n                >\n                    {order.hasShipped ? 'Set Not Shipped' : 'Set Shipped'}\n                </button>\n                <button\n                    className=\"button danger outline\"\n                    type=\"button\"\n                    onClick={handleDelete}\n                >\n                    Delete Order\n                </button>\n            </StyledDiv>\n        </StyledLi>\n    )\n}\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport Order from './Order.js'\nimport Filter from './Filter.js'\n\nconst StyledPage = styled.main`\n    overflow-y: scroll;\n    padding-top: calc(4rem + var(--base-unit) * 2);\n`\n\nconst StyledUl = styled.ul`\n    display: flex;\n    flex-flow: column nowrap;\n`\n\nexport default function Orders({ orders, token, setShowModal, setOrders }) {\n    const [filter, setFilter] = useState({\n        hasPaid: true,\n        hasShipped: false,\n    })\n    const [showAll, setShowAll] = useState(false)\n    const filters = [\n        {\n            active: filter.hasShipped && !showAll,\n            text: 'Has Shipped',\n            setActive: () =>\n                filter.hasShipped\n                    ? setFilter({ ...filter, hasShipped: false })\n                    : setFilter({ ...filter, hasShipped: true }),\n        },\n        {\n            active: filter.hasPaid && !showAll,\n            text: 'Has Paid',\n            setActive: () =>\n                filter.hasPaid\n                    ? setFilter({ ...filter, hasPaid: false })\n                    : setFilter({ ...filter, hasPaid: true }),\n        },\n        {\n            active: showAll,\n            text: 'All',\n            setActive: () => setShowAll(!showAll),\n        },\n    ]\n    const ordersToShow =\n        orders && showAll\n            ? orders\n            : orders.filter(order => {\n                  for (const [key, val] of Object.entries(filter))\n                      if (order[key] !== val) return false\n                  return true\n              })\n    return (\n        <StyledPage>\n            <Filter filters={filters} />\n            <StyledUl>\n                {orders &&\n                    ordersToShow.map(order => (\n                        <Order\n                            token={token}\n                            order={order}\n                            key={order.id}\n                            setShowModal={setShowModal}\n                            setOrders={() => orders => setOrders(orders)}\n                        />\n                    ))}\n            </StyledUl>\n        </StyledPage>\n    )\n}\n","import styled from 'styled-components'\nimport { useState } from 'react'\nimport Header from './components/Header.js'\nimport SideNav from './components/SideNav.js'\nimport Inventory from './components/Inventory.js'\nimport Orders from './components/Orders.js'\n\nconst StyledDashboard = styled.div`\n    display: flex;\n    flex-flow: column nowrap;\n    padding-top: 4rem;\n    padding-left: ${props => (props.showFull ? '12rem' : '4rem')};\n    height: 100vh;\n    overflow: hidden;\n`\n\nexport default function Dashboard({\n    inv,\n    orders,\n    token,\n    setShowModal,\n    logout,\n    setOrders,\n    setInv,\n}) {\n    const [page, setPage] = useState('inventory')\n    const [showFull, setShowFull] = useState(true)\n    const numOrders = orders ? orders.length : 0\n    const numInv = inv ? [...inv.ff, ...inv.pf, ...inv.cf].length : 0\n\n    return (\n        <StyledDashboard showFull={showFull}>\n            <Header text=\"Zircus Admin Dashboard\" logout={logout} />\n            <SideNav\n                page={page}\n                setPage={setPage}\n                orders={numOrders}\n                inv={numInv}\n                showFull={showFull}\n                setShowFull={setShowFull}\n            />\n            {page === 'inventory' && (\n                <Inventory\n                    inv={inv}\n                    token={token}\n                    setShowModal={setShowModal}\n                    setInv={setInv}\n                />\n            )}\n            {page === 'orders' && (\n                <Orders\n                    orders={orders}\n                    token={token}\n                    setShowModal={setShowModal}\n                    setOrders={setOrders}\n                />\n            )}\n        </StyledDashboard>\n    )\n}\n","import styled from 'styled-components'\n\nconst StyledBlur = styled.div`\n    ${props => props.showModal && 'filter: blur(0.25rem)'};\n`\n\nconst StyledBlock = styled.div`\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    position: fixed;\n`\n\nconst StyledModal = styled.section`\n    position: fixed;\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 1rem;\n    backgroud-color: var(--gray-90);\n    top: calc(25%);\n    left: calc(50% - 25vw);\n    width: 50vw;\n    min-height: 15rem;\n    background-color: var(--gray-10);\n    border-radius: var(--big-radius);\n    border: 2px solid var(--dgray-90);\n    padding: var(--base-spacing);\n`\n\nconst StyledText = styled.p`\n    flex-grow: 1;\n`\n\nconst StyledButtons = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    width: 100%;\n    gap: 1rem;\n`\n\nconst StyledButton = styled.button`\n    flex-grow: 1;\n`\n\nexport default function Modal({ children, showModal, setShowModal }) {\n    const ok = () => {\n        showModal.ok(true)\n        setShowModal(null)\n    }\n    const cancel = () => {\n        showModal.ok(false)\n        setShowModal(null)\n    }\n    return (\n        <div>\n            <StyledBlur showModal={showModal}>\n                {children}\n                {showModal && <StyledBlock></StyledBlock>}\n            </StyledBlur>\n            {showModal && (\n                <StyledModal>\n                    <h2>{showModal.heading}</h2>\n                    <StyledText>{showModal.text}</StyledText>\n                    <StyledButtons>\n                        <StyledButton\n                            className=\"button\"\n                            type=\"button\"\n                            onClick={ok}\n                        >\n                            Ok\n                        </StyledButton>\n                        <StyledButton\n                            className=\"button outline\"\n                            type=\"button\"\n                            onClick={cancel}\n                        >\n                            Cancel\n                        </StyledButton>\n                    </StyledButtons>\n                </StyledModal>\n            )}\n        </div>\n    )\n}\n","import Login from './Login.js'\nimport Dashboard from './Dashboard.js'\nimport Modal from './components/Modal.js'\nimport { useEffect, useState } from 'react'\nimport { getInv, getOrders } from './services/services.js'\n\nfunction App() {\n    const [user, setUser] = useState(null)\n    const [token, setToken] = useState(null)\n    const [inv, setInv] = useState(null)\n    const [orders, setOrders] = useState(null)\n    const [showModal, setShowModal] = useState(null)\n\n    const logout = () => {\n        setUser(null)\n        setToken(null)\n        localStorage.removeItem('user')\n        localStorage.removeItem('token')\n    }\n\n    useEffect(() => {\n        getInv()\n            .then(reply => setInv(reply.data))\n            .catch(() => setInv(null))\n        getOrders(token)\n            .then(reply => setOrders(reply.data))\n            .catch(() => setOrders(null))\n    }, [setInv, token])\n\n    return (\n        <Modal showModal={showModal} setShowModal={setShowModal}>\n            {token ? (\n                <Dashboard\n                    inv={inv}\n                    orders={orders}\n                    token={token}\n                    logout={logout}\n                    setShowModal={setShowModal}\n                    setOrders={setOrders}\n                    setInv={setInv}\n                />\n            ) : (\n                <Login setUser={setUser} setToken={setToken} />\n            )}\n        </Modal>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}