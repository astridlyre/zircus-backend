{"version":3,"sources":["services/services.js","hooks/hooks.js","Login.js","components/Header.js","components/SideNav.js","components/Trash.js","components/InventoryItem.js","components/Spinner.js","components/Inventory.js","components/Order.js","components/Orders.js","Dashboard.js","App.js","index.js"],"names":["API_ENDPOINT","login","username","password","a","axios","post","get","token","headers","Authorization","updateOrder","order","put","id","item","useField","type","initial","placeholder","useState","value","setFieldVal","onChange","e","target","StyledLogin","styled","main","StyledForm","form","StyledLabel","label","StyledMessage","p","props","failedLogin","StyledButton","button","Login","setToken","setUser","setFailedLogin","usernameInput","passwordInput","handleFailedLogin","setTimeout","handleSuccessfulLogin","data","name","localStorage","setItem","handleSubmit","preventDefault","then","catch","useEffect","storedToken","getItem","storedUser","onSubmit","htmlFor","disabled","className","StyledHeader","header","StyledH3","h3","Header","text","logout","onClick","StyledNav","nav","StyledUl","ul","StyledLi","li","SideNav","setPage","page","Trash","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","StyledImg","img","StyledName","StyledAttr","InventoryItem","quantity","setQuantity","active","setActive","price","setPrice","handler","key","setter","event","updateItem","console","log","handleQuantity","handleActive","handlePrice","src","images","sm_a","alt","size","color","min","step","checked","Spinner","x1","y1","x2","y2","StyledFiltersContainer","div","StyledFilters","StyledPage","Inventory","inv","showFF","setShowFF","showPF","setShowPF","showCF","setShowCF","ff","map","pf","cf","StyledAddress","address","StyledDate","span","StyledDiv","Order","hasPaid","setHasPaid","hasShipped","setHasShipped","Date","createdOn","toLocaleString","total","items","href","email","streetAddress","city","state","zip","updatedAttributes","Orders","orders","StyledDashboard","Dashboard","App","setInv","setOrders","getInv","reply","getOrders","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEMA,EAAe,mCAGd,SAAeC,EAAtB,oC,4CAAO,WAAqBC,EAAUC,GAA/B,SAAAC,EAAA,sEACUC,IAAMC,KAAN,UAAcN,EAAd,UAAoC,CAC7CE,WACAC,aAHD,oF,kEAOA,sBAAAC,EAAA,sEACUC,IAAME,IAAN,UAAaP,EAAb,SADV,oF,kEAIA,WAAyBQ,GAAzB,SAAAJ,EAAA,sEACUC,IAAME,IAAN,UAAaP,EAAb,WAAoC,CAC7CS,QAAS,CACLC,cAAc,UAAD,OAAYF,MAH9B,oF,sBAQA,SAAeG,EAAtB,oC,4CAAO,WAA2BC,EAAOJ,GAAlC,SAAAJ,EAAA,sEACUC,IAAMQ,IAAN,UAAab,EAAb,mBAAoCY,EAAME,IAAMF,EAAO,CAChEH,QAAS,CACLC,cAAc,UAAD,OAAYF,MAH9B,oF,kEAQA,WAA0BO,EAAMP,GAAhC,SAAAJ,EAAA,sEACUC,IAAMQ,IAAN,UAAab,EAAb,QAAiCe,EAAM,CAChDN,QAAS,CACLC,cAAc,UAAD,OAAYF,MAH9B,oF,sBC9BA,SAASQ,EAASC,EAAMC,EAASC,GACpC,MAA6BC,mBAASF,GAAtC,mBAAOG,EAAP,KAAcC,EAAd,KACA,MAAO,CACH,CACIL,OACAI,QACAE,SAAU,SAAAC,GAAC,OAAIF,EAAYE,EAAEC,OAAOJ,QACpCF,eAEJ,kBAAMG,EAAYJ,K,yBCNpBQ,EAAcC,IAAOC,KAAV,2HAOXC,EAAaF,IAAOG,KAAV,sPAUVC,EAAcJ,IAAOK,MAAV,mGAMXC,EAAgBN,IAAOO,EAAV,wGACN,SAAAC,GAAK,OAAKA,EAAMC,YAAc,aAAe,uBAKpDC,EAAeV,IAAOW,OAAV,uDAIH,SAASC,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACtC,EAAsCrB,oBAAS,GAA/C,mBAAOgB,EAAP,KAAoBM,EAApB,KACA,EAAwB1B,EAAS,OAAQ,IAAlC2B,EAAP,oBACA,EAAwB3B,EAAS,WAAY,IAAtC4B,EAAP,oBAEMC,EAAoB,WACtBH,GAAe,GACfI,YAAW,WACPJ,GAAe,KAChB,MAGDK,EAAwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC7BP,EAAQO,EAAKC,MACbT,EAASQ,EAAKxC,OACd0C,aAAaC,QAAQ,OAAQH,EAAKC,MAClCC,aAAaC,QAAQ,QAASH,EAAKxC,QAGjC4C,EAAY,uCAAG,WAAM5B,GAAN,SAAApB,EAAA,sDACjBoB,EAAE6B,iBACFpD,EAAM0C,EAActB,MAAOuB,EAAcvB,OACpCiC,KAAKP,GACLQ,MAAMV,GAJM,2CAAH,sDAclB,OAPAW,qBAAU,WACN,IAAMC,EAAcP,aAAaQ,QAAQ,SACnCC,EAAaT,aAAaQ,QAAQ,QACpCD,GAAajB,EAASiB,GACtBE,GAAYlB,EAAQkB,KACzB,CAACnB,EAAUC,IAGV,cAACf,EAAD,UACI,eAACG,EAAD,CAAY+B,SAAUR,EAAtB,UACI,8CACA,cAACnB,EAAD,CAAeG,YAAaA,EAA5B,SACKA,EAAc,eAAiB,mBAEpC,eAACL,EAAD,CAAa8B,QAAQ,WAArB,UACI,4CACA,iDACQlB,GADR,IAEImB,WAAU1B,QAGlB,eAACL,EAAD,CAAa8B,QAAQ,WAArB,UACI,4CACA,iDACQjB,GADR,IAEIkB,WAAU1B,QAGlB,cAACC,EAAD,CACI0B,UAAU,SACV9C,KAAK,SACL6C,WAAU1B,EAHd,SAKKA,EAAc,cAAgB,gBC/FnD,I,QAAM4B,EAAerC,IAAOsC,OAAV,0QAaZC,EAAWvC,IAAOwC,GAAV,kEAIC,SAASC,EAAT,GAAmC,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OACnC,OACI,eAACN,EAAD,WACI,cAACE,EAAD,UAAWG,IACX,wBACIN,UAAU,uBACV9C,KAAK,SACLsD,QAASD,EAHb,uBCrBZ,IAAME,EAAY7C,IAAO8C,IAAV,kMAUTC,EAAW/C,IAAOgD,GAAV,sGAMRC,EAAWjD,IAAOkD,GAAV,mGAMRxC,EAAeV,IAAOW,OAAV,+CAIH,SAASwC,EAAT,GAAqC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KACvC,OACI,cAACR,EAAD,UACI,eAACE,EAAD,WACI,cAACE,EAAD,UACI,cAAC,EAAD,CACIb,UACa,cAATiB,EAAuB,SAAW,iBAEtCT,QAAS,kBAAMQ,EAAQ,cAJ3B,yBASJ,cAACH,EAAD,UACI,cAAC,EAAD,CACIb,UACa,UAATiB,EAAmB,SAAW,iBAElCT,QAAS,kBAAMQ,EAAQ,WAJ3B,sBASJ,cAACH,EAAD,UACI,cAAC,EAAD,CACIb,UACa,YAATiB,EAAqB,SAAW,iBAEpCT,QAAS,kBAAMQ,EAAQ,YAJ3B,4B,yBCrDL,SAASE,KACpB,OACI,sBACIC,MAAM,6BACNC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QAPnB,UASI,0BAAUC,OAAO,iBACjB,sBAAMC,EAAE,sFCNpB,I,YAAMd,GAAWjD,IAAOkD,GAAV,8OAaRc,GAAYhE,IAAOiE,IAAV,mDAITC,GAAalE,IAAOO,EAAV,yEAKV4D,GAAanE,IAAOO,EAAV,qDAIVH,GAAcJ,IAAOK,MAAV,8GAOF,SAAS+D,GAAT,GAAyC,IAAhBhF,EAAe,EAAfA,KAAMP,EAAS,EAATA,MAC1C,EAAgCY,mBAASL,EAAKiF,UAA9C,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAA4B7E,mBAASL,EAAKmF,QAA1C,mBAAOA,EAAP,KAAeC,EAAf,KACA,EAA0B/E,mBAASL,EAAKqF,OAAxC,mBAAOA,EAAP,KAAcC,EAAd,KAEMC,EAAU,SAACC,EAAKC,GAAN,OAAiB,SAAAC,GAC7BD,EAAOC,EAAMhF,OAAOJ,ONbrB,SAAP,oCMcQqF,CAAW,2BAAK3F,GAAN,mBAAawF,EAAME,EAAMhF,OAAOJ,QAASb,GAAO+C,OAAM,SAAA/B,GAAC,OAC7DmF,QAAQC,IAAIpF,QAIdqF,EAAiBP,EAAQ,WAAYL,GACrCa,EAAeR,EAAQ,SAAUH,GACjCY,EAAcT,EAAQ,QAASD,GAErC,OACI,eAAC,GAAD,WACI,cAACV,GAAD,CACIqB,IAAG,qCAAgCjG,EAAKkG,OAAOC,MAC/CC,IAAKpG,EAAKkC,KACVc,UAAU,yBAEd,cAAC8B,GAAD,UAAa9E,EAAKkC,OAClB,cAAC6C,GAAD,UAAa/E,EAAKqG,OAClB,cAACtB,GAAD,UAAa/E,EAAKsG,QAClB,eAAC,GAAD,CAAaxD,QAAO,UAAK9C,EAAKD,GAAV,UAApB,UACI,cAACgF,GAAD,oBACA,uBACIwB,IAAI,IACJC,KAAK,IACLH,KAAK,IACLnG,KAAK,SACLH,GAAE,UAAKC,EAAKD,GAAV,UACFO,MAAO+E,EACP7E,SAAUwF,OAGlB,eAAC,GAAD,CAAalD,QAAO,UAAK9C,EAAKD,GAAV,aAApB,UACI,cAACgF,GAAD,uBACA,uBACIwB,IAAI,IACJC,KAAK,IACLH,KAAK,IACLnG,KAAK,SACLH,GAAE,UAAKC,EAAKD,GAAV,aACFO,MAAO2E,EACPzE,SAAUsF,OAGlB,eAAC,GAAD,CAAahD,QAAQ,SAArB,UACI,cAACiC,GAAD,qBACA,uBACI7E,KAAK,WACLuG,UAAStB,EACT3E,SAAUuF,OAGlB,wBAAQ7F,KAAK,SAAS8C,UAAU,4BAAhC,SACI,cAACkB,GAAD,SClGD,SAASwC,KACpB,OACI,sBACIvC,MAAM,6BACNC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfzB,UAAU,OARd,UAUI,sBAAM2D,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAChC,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,sBAAMH,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,SACvC,sBAAMH,GAAG,QAAQC,GAAG,QAAQC,GAAG,QAAQC,GAAG,UAC1C,sBAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAC/B,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,sBAAMH,GAAG,OAAOC,GAAG,QAAQC,GAAG,OAAOC,GAAG,UACxC,sBAAMH,GAAG,QAAQC,GAAG,OAAOC,GAAG,QAAQC,GAAG,YCdrD,I,YAAMC,GAAyBnG,IAAOoG,IAAV,uVAatBC,GAAgBrG,IAAOoG,IAAV,kEAKb7D,GAAWvC,IAAOwC,GAAV,wDAIR8D,GAAatG,IAAOC,KAAV,+EAKD,SAASsG,GAAT,GAAoC,IAAfC,EAAc,EAAdA,IAAK3H,EAAS,EAATA,MACrC,EAA4BY,oBAAS,GAArC,mBAAOgH,EAAP,KAAeC,EAAf,KACA,EAA4BjH,oBAAS,GAArC,mBAAOkH,EAAP,KAAeC,EAAf,KACA,EAA4BnH,oBAAS,GAArC,mBAAOoH,EAAP,KAAeC,EAAf,KAEA,OACI,eAACR,GAAD,WACI,eAACH,GAAD,WACI,cAAC,GAAD,wBACA,eAACE,GAAD,WACI,wBACI/G,KAAK,SACL8C,UAAWqE,EAAS,SAAW,iBAC/B7D,QAAS,kBAAM8D,GAAWD,IAH9B,wBAOA,wBACInH,KAAK,SACL8C,UAAWuE,EAAS,gBAAkB,iBACtC/D,QAAS,kBAAMgE,GAAWD,IAH9B,yBAOA,wBACIrH,KAAK,SACL8C,UAAWyE,EAAS,gBAAkB,iBACtCjE,QAAS,kBAAMkE,GAAWD,IAH9B,qCASR,qBAAIzE,UAAU,MAAd,UACKoE,GACGC,GACAD,EAAIO,GAAGC,KAAI,SAAA5H,GAAI,OACX,cAACgF,GAAD,CACIhF,KAAMA,EAENP,MAAOA,GADFO,EAAKD,OAIrBqH,GACGG,GACAH,EAAIS,GAAGD,KAAI,SAAA5H,GAAI,OACX,cAACgF,GAAD,CACIhF,KAAMA,EAENP,MAAOA,GADFO,EAAKD,OAIrBqH,GACGK,GACAL,EAAIU,GAAGF,KAAI,SAAA5H,GAAI,OACX,cAACgF,GAAD,CACIhF,KAAMA,EAENP,MAAOA,GADFO,EAAKD,QAIpBqH,GACE,oBAAIrH,GAAG,UAAUiD,UAAU,UAA3B,SACI,cAAC0D,GAAD,YC3FxB,I,MAAM7C,GAAWjD,IAAOkD,GAAV,iOAYRiE,GAAgBnH,IAAOoH,QAAV,iDAIbC,GAAarH,IAAOsH,KAAV,6IAOVC,GAAYvH,IAAOoG,IAAV,iGAMA,SAASoB,GAAT,GAAkC,IAAjBvI,EAAgB,EAAhBA,MAAOJ,EAAS,EAATA,MACnC,EAA8BY,mBAASR,EAAMwI,SAA7C,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAoCjI,mBAASR,EAAM0I,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KA4BA,OACI,eAAC,GAAD,WACI,gCACI,cAACP,GAAD,UACK,IAAIQ,KAAK5I,EAAM6I,WAAWC,eAAe,WAE9C,+BACI,4CAAeN,EAAU,MAAQ,QACjC,+CAAkBE,EAAa,MAAQ,QACvC,6BACI,uCAAU1I,EAAM+I,iBAI5B,6BACK/I,EAAMgJ,MAAMjB,KAAI,SAAA5H,GAAI,OACjB,+BACKA,EAAKE,KADV,MACmBF,EAAKiF,WADfjF,EAAKE,WAKtB,eAAC6H,GAAD,WACI,iCAASlI,EAAMqC,OACf,uBACA,mBAAG4G,KAAI,iBAAYjJ,EAAMkJ,OAAzB,SAAmClJ,EAAMkJ,QACzC,uBACClJ,EAAMmJ,cACP,uBACCnJ,EAAMoJ,KACP,uBACCpJ,EAAMqJ,MACP,uBACCrJ,EAAMsJ,IACP,0BAEJ,eAAChB,GAAD,WACI,wBACInF,UAAU,kBACV9C,KAAK,SACLsD,QApDM,kBAClB5D,EACI,CACIG,GAAIF,EAAME,GACVqJ,kBAAmB,CACfb,YAAaA,IAGrB9I,GAEC8C,MAAK,kBAAMiG,GAAeD,MAC1B/F,OAAM,SAAA/B,GAAC,OAAImF,QAAQC,IAAIpF,OAsCpB,4BAOA,wBAAQuC,UAAU,SAAS9C,KAAK,SAASsD,QArElC,kBACf5D,EACI,CACIG,GAAIF,EAAME,GACVqJ,kBAAmB,CACff,SAAUA,IAGlB5I,GAEC8C,MAAK,kBAAM+F,GAAYD,MACvB7F,OAAM,SAAA/B,GAAC,OAAImF,QAAQC,IAAIpF,OA0DpB,yBAGA,wBAAQuC,UAAU,gBAAgB9C,KAAK,SAAvC,gCC1GhB,I,GAAMgH,GAAatG,IAAOC,KAAV,uDAIV8C,GAAW/C,IAAOgD,GAAV,+IAOC,SAASyF,GAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,OAAQ7J,EAAS,EAATA,MACrC,OACI,cAAC,GAAD,UACI,cAAC,GAAD,UACK6J,GACGA,EAAO1B,KAAI,SAAA/H,GAAK,OACZ,cAACuI,GAAD,CAAO3I,MAAOA,EAAOI,MAAOA,GAAYA,EAAME,WCbtE,IAAMwJ,GAAkB3I,IAAOoG,IAAV,6KASN,SAASwC,GAAT,GAAoD,IAA/BpC,EAA8B,EAA9BA,IAAKkC,EAAyB,EAAzBA,OAAQ7J,EAAiB,EAAjBA,MAAO8D,EAAU,EAAVA,OACpD,EAAwBlD,mBAAS,aAAjC,mBAAO4D,EAAP,KAAaD,EAAb,KAEA,OACI,eAACuF,GAAD,WACI,cAAClG,EAAD,CAAQC,KAAK,yBAAyBC,OAAQA,IAC9C,cAACQ,EAAD,CAASE,KAAMA,EAAMD,QAASA,IACpB,cAATC,GAAwB,cAACkD,GAAD,CAAWC,IAAKA,EAAK3H,MAAOA,IAC3C,WAATwE,GAAqB,cAACoF,GAAD,CAAQC,OAAQA,EAAQ7J,MAAOA,OCUlDgK,OA7Bf,WACI,MAAwBpJ,mBAAS,MAAjC,mBAAaqB,GAAb,WACA,EAA0BrB,mBAAS,MAAnC,mBAAOZ,EAAP,KAAcgC,EAAd,KACA,EAAsBpB,mBAAS,MAA/B,mBAAO+G,EAAP,KAAYsC,EAAZ,KACA,EAA4BrJ,mBAAS,MAArC,mBAAOiJ,EAAP,KAAeK,EAAf,KAkBA,OATAlH,qBAAU,YZNP,WAAP,gCYOQmH,GACKrH,MAAK,SAAAsH,GAAK,OAAIH,EAAOG,EAAM5H,SAC3BO,OAAM,kBAAMkH,EAAO,SZLzB,SAAP,kCYMQI,CAAUrK,GACL8C,MAAK,SAAAsH,GAAK,OAAIF,EAAUE,EAAM5H,SAC9BO,OAAM,kBAAMmH,EAAU,WAC5B,CAACD,EAAQjK,IAELA,EACH,cAAC+J,GAAD,CAAWpC,IAAKA,EAAKkC,OAAQA,EAAQ7J,MAAOA,EAAO8D,OAjBxC,WACX7B,EAAQ,MACRD,EAAS,MACTU,aAAa4H,WAAW,QACxB5H,aAAa4H,WAAW,YAexB,cAACvI,EAAD,CAAOE,QAASA,EAASD,SAAUA,K,MCzB3CuI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.d166b016.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst API_ENDPOINT = 'https://zircus.herokuapp.com/api'\n// const API_ENDPOINT = 'http://localhost:3000/api'\n\nexport async function login(username, password) {\n    return await axios.post(`${API_ENDPOINT}/login`, {\n        username,\n        password,\n    })\n}\n\nexport async function getInv() {\n    return await axios.get(`${API_ENDPOINT}/inv`)\n}\n\nexport async function getOrders(token) {\n    return await axios.get(`${API_ENDPOINT}/orders`, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    })\n}\n\nexport async function updateOrder(order, token) {\n    return await axios.put(`${API_ENDPOINT}/orders/${order.id}`, order, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    })\n}\n\nexport async function updateItem(item, token) {\n    return await axios.put(`${API_ENDPOINT}/inv`, item, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    })\n}\n","import { useState } from 'react'\n\nexport function useField(type, initial, placeholder) {\n    const [value, setFieldVal] = useState(initial)\n    return [\n        {\n            type,\n            value,\n            onChange: e => setFieldVal(e.target.value),\n            placeholder,\n        },\n        () => setFieldVal(initial),\n    ]\n}\n","import styled from 'styled-components'\nimport { useEffect, useState } from 'react'\nimport { login } from './services/services.js'\nimport { useField } from './hooks/hooks.js'\n\nconst StyledLogin = styled.main`\n    width: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    align-items: center;\n`\n\nconst StyledForm = styled.form`\n    margin-top: var(--base-spacing);\n    padding: var(--md-spacing);\n    background-color: var(--gray-20);\n    border-radius: var(--big-radius);\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 0.5rem;\n`\n\nconst StyledLabel = styled.label`\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 0.325rem;\n`\n\nconst StyledMessage = styled.p`\n    color: ${props => (props.failedLogin ? 'var(--red)' : 'var(--text-color)')};\n    margin: var(--base-spacing) 0;\n    font-weight: 500;\n`\n\nconst StyledButton = styled.button`\n    margin-top: 1.625rem;\n`\n\nexport default function Login({ setToken, setUser }) {\n    const [failedLogin, setFailedLogin] = useState(false)\n    const [usernameInput] = useField('text', '')\n    const [passwordInput] = useField('password', '')\n\n    const handleFailedLogin = () => {\n        setFailedLogin(true)\n        setTimeout(() => {\n            setFailedLogin(false)\n        }, 2000)\n    }\n\n    const handleSuccessfulLogin = ({ data }) => {\n        setUser(data.name)\n        setToken(data.token)\n        localStorage.setItem('user', data.name)\n        localStorage.setItem('token', data.token)\n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        login(usernameInput.value, passwordInput.value)\n            .then(handleSuccessfulLogin)\n            .catch(handleFailedLogin)\n    }\n\n    useEffect(() => {\n        const storedToken = localStorage.getItem('token')\n        const storedUser = localStorage.getItem('user')\n        if (storedToken) setToken(storedToken)\n        if (storedUser) setUser(storedUser)\n    }, [setToken, setUser])\n\n    return (\n        <StyledLogin>\n            <StyledForm onSubmit={handleSubmit}>\n                <h1>Zircus Admin</h1>\n                <StyledMessage failedLogin={failedLogin}>\n                    {failedLogin ? 'Login failed' : 'Please Log in:'}\n                </StyledMessage>\n                <StyledLabel htmlFor=\"username\">\n                    <span>Username</span>\n                    <input\n                        {...usernameInput}\n                        disabled={failedLogin ? true : false}\n                    />\n                </StyledLabel>\n                <StyledLabel htmlFor=\"password\">\n                    <span>Password</span>\n                    <input\n                        {...passwordInput}\n                        disabled={failedLogin ? true : false}\n                    />\n                </StyledLabel>\n                <StyledButton\n                    className=\"button\"\n                    type=\"submit\"\n                    disabled={failedLogin ? true : false}\n                >\n                    {failedLogin ? 'Please wait' : 'Log in'}\n                </StyledButton>\n            </StyledForm>\n        </StyledLogin>\n    )\n}\n","import styled from 'styled-components'\n\nconst StyledHeader = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 4rem;\n    background: var(--dgray-80);\n    padding: var(--base-spacing);\n`\n\nconst StyledH3 = styled.h3`\n    color: var(--invert-text-color);\n`\n\nexport default function Header({ text, logout }) {\n    return (\n        <StyledHeader>\n            <StyledH3>{text}</StyledH3>\n            <button\n                className=\"button light outline\"\n                type=\"button\"\n                onClick={logout}\n            >\n                logout\n            </button>\n        </StyledHeader>\n    )\n}\n","import styled from 'styled-components'\n\nconst StyledNav = styled.nav`\n    position: fixed;\n    top: 4rem;\n    left: 0;\n    bottom: 0;\n    width: 16vw;\n    padding: var(--base-spacing);\n    border-right: 2px solid var(--gray-20);\n`\n\nconst StyledUl = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-flow: column nowrap;\n`\n\nconst StyledLi = styled.li`\n    margin: var(--base-unit) 0;\n    width: 100%;\n    display: flex;\n`\n\nconst StyledButton = styled.button`\n    flex-grow: 1;\n`\n\nexport default function SideNav({ setPage, page }) {\n    return (\n        <StyledNav>\n            <StyledUl>\n                <StyledLi>\n                    <StyledButton\n                        className={\n                            page === 'inventory' ? 'button' : 'button outline'\n                        }\n                        onClick={() => setPage('inventory')}\n                    >\n                        Inventory\n                    </StyledButton>\n                </StyledLi>\n                <StyledLi>\n                    <StyledButton\n                        className={\n                            page === 'order' ? 'button' : 'button outline'\n                        }\n                        onClick={() => setPage('orders')}\n                    >\n                        Orders\n                    </StyledButton>\n                </StyledLi>\n                <StyledLi>\n                    <StyledButton\n                        className={\n                            page === 'metrics' ? 'button' : 'button outline'\n                        }\n                        onClick={() => setPage('metrics')}\n                    >\n                        Metrics\n                    </StyledButton>\n                </StyledLi>\n            </StyledUl>\n        </StyledNav>\n    )\n}\n","export default function Trash() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        >\n            <polyline points=\"3 6 5 6 21 6\"></polyline>\n            <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n        </svg>\n    )\n}\n","import styled from 'styled-components'\nimport { useState } from 'react'\nimport { useField } from '../hooks/hooks.js'\nimport Trash from './Trash.js'\nimport { updateItem } from '../services/services.js'\n\nconst StyledLi = styled.li`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    gap: 2rem;\n    border-top: 2px solid var(--gray-20);\n    padding: 1rem;\n\n    &:hover {\n        background-color: var(--gray-20);\n    }\n`\n\nconst StyledImg = styled.img`\n    max-height: 2rem;\n`\n\nconst StyledName = styled.p`\n    font-size: 1.125rem;\n    flex-grow: 1;\n`\n\nconst StyledAttr = styled.p`\n    font-weight: 500;\n`\n\nconst StyledLabel = styled.label`\n    display: flex;\n    align-items: center;\n    margin: 0;\n    gap: 0.5rem;\n`\n\nexport default function InventoryItem({ item, token }) {\n    const [quantity, setQuantity] = useState(item.quantity)\n    const [active, setActive] = useState(item.active)\n    const [price, setPrice] = useState(item.price)\n\n    const handler = (key, setter) => event => {\n        setter(event.target.value)\n        updateItem({ ...item, [key]: event.target.value }, token).catch(e =>\n            console.log(e)\n        )\n    }\n\n    const handleQuantity = handler('quantity', setQuantity)\n    const handleActive = handler('active', setActive)\n    const handlePrice = handler('price', setPrice)\n\n    return (\n        <StyledLi>\n            <StyledImg\n                src={`https://zircus.netlify.app/${item.images.sm_a}`}\n                alt={item.name}\n                className=\"inventory__item__img\"\n            />\n            <StyledName>{item.name}</StyledName>\n            <StyledAttr>{item.size}</StyledAttr>\n            <StyledAttr>{item.color}</StyledAttr>\n            <StyledLabel htmlFor={`${item.id}-price`}>\n                <StyledAttr>price</StyledAttr>\n                <input\n                    min=\"0\"\n                    step=\"1\"\n                    size=\"5\"\n                    type=\"number\"\n                    id={`${item.id}-price`}\n                    value={price}\n                    onChange={handlePrice}\n                />\n            </StyledLabel>\n            <StyledLabel htmlFor={`${item.id}-quantity`}>\n                <StyledAttr>quantity</StyledAttr>\n                <input\n                    min=\"0\"\n                    step=\"1\"\n                    size=\"5\"\n                    type=\"number\"\n                    id={`${item.id}-quantity`}\n                    value={quantity}\n                    onChange={handleQuantity}\n                />\n            </StyledLabel>\n            <StyledLabel htmlFor=\"active\">\n                <StyledAttr>active</StyledAttr>\n                <input\n                    type=\"checkbox\"\n                    checked={active ? true : false}\n                    onChange={handleActive}\n                />\n            </StyledLabel>\n            <button type=\"button\" className=\"button danger icon-button\">\n                <Trash />\n            </button>\n        </StyledLi>\n    )\n}\n","export default function Spinner() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"icon\"\n        >\n            <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"6\"></line>\n            <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"22\"></line>\n            <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\"></line>\n            <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\"></line>\n            <line x1=\"2\" y1=\"12\" x2=\"6\" y2=\"12\"></line>\n            <line x1=\"18\" y1=\"12\" x2=\"22\" y2=\"12\"></line>\n            <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\"></line>\n            <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\"></line>\n        </svg>\n    )\n}\n","import styled from 'styled-components'\nimport { useState } from 'react'\nimport InventoryItem from './InventoryItem.js'\nimport Spinner from './Spinner.js'\n\nconst StyledFiltersContainer = styled.div`\n    position: fixed;\n    right: var(--base-spacing);\n    top: calc(4rem + var(--base-spacing));\n    margin-left: var(--base-spacing);\n    padding: var(--base-spacing);\n    background-color: var(--gray-20);\n    border-radius: var(--big-radius);\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n`\n\nconst StyledFilters = styled.div`\n    display: flex;\n    gap: 1rem;\n`\n\nconst StyledH3 = styled.h3`\n    font-size: 1.125rem;\n`\n\nconst StyledPage = styled.main`\n    overflow-y: scroll;\n    padding-top: 8rem;\n`\n\nexport default function Inventory({ inv, token }) {\n    const [showFF, setShowFF] = useState(true)\n    const [showPF, setShowPF] = useState(true)\n    const [showCF, setShowCF] = useState(true)\n\n    return (\n        <StyledPage>\n            <StyledFiltersContainer>\n                <StyledH3>Filter by</StyledH3>\n                <StyledFilters>\n                    <button\n                        type=\"button\"\n                        className={showFF ? 'button' : 'button outline'}\n                        onClick={() => setShowFF(!showFF)}\n                    >\n                        Flat Front\n                    </button>\n                    <button\n                        type=\"button\"\n                        className={showPF ? 'button active' : 'button outline'}\n                        onClick={() => setShowPF(!showPF)}\n                    >\n                        Pouch Front\n                    </button>\n                    <button\n                        type=\"button\"\n                        className={showCF ? 'button active' : 'button outline'}\n                        onClick={() => setShowCF(!showCF)}\n                    >\n                        Compression Front\n                    </button>\n                </StyledFilters>\n            </StyledFiltersContainer>\n            <ul className=\"inv\">\n                {inv &&\n                    showFF &&\n                    inv.ff.map(item => (\n                        <InventoryItem\n                            item={item}\n                            key={item.id}\n                            token={token}\n                        />\n                    ))}\n                {inv &&\n                    showPF &&\n                    inv.pf.map(item => (\n                        <InventoryItem\n                            item={item}\n                            key={item.id}\n                            token={token}\n                        />\n                    ))}\n                {inv &&\n                    showCF &&\n                    inv.cf.map(item => (\n                        <InventoryItem\n                            item={item}\n                            key={item.id}\n                            token={token}\n                        />\n                    ))}\n                {!inv && (\n                    <li id=\"spinner\" className=\"spinner\">\n                        <Spinner />\n                    </li>\n                )}\n            </ul>\n        </StyledPage>\n    )\n}\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { updateOrder } from '../services/services.js'\n\nconst StyledLi = styled.li`\n    display: flex;\n    gap: 2rem;\n    padding: var(--base-spacing);\n    width: 100%;\n    border-radius: var(--big-radius);\n\n    &:hover {\n        background-color: var(--gray-20);\n    }\n`\n\nconst StyledAddress = styled.address`\n    flex-grow: 1;\n`\n\nconst StyledDate = styled.span`\n    font-size: 1.125rem;\n    font-weight: 500;\n    display: block;\n    margin-bottom: var(--base-spacing);\n`\n\nconst StyledDiv = styled.div`\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 1rem;\n`\n\nexport default function Order({ order, token }) {\n    const [hasPaid, setHasPaid] = useState(order.hasPaid)\n    const [hasShipped, setHasShipped] = useState(order.hasShipped)\n\n    const updatePaid = () =>\n        updateOrder(\n            {\n                id: order.id,\n                updatedAttributes: {\n                    hasPaid: !hasPaid,\n                },\n            },\n            token\n        )\n            .then(() => setHasPaid(!hasPaid))\n            .catch(e => console.log(e))\n\n    const updateShipped = () =>\n        updateOrder(\n            {\n                id: order.id,\n                updatedAttributes: {\n                    hasShipped: !hasShipped,\n                },\n            },\n            token\n        )\n            .then(() => setHasShipped(!hasShipped))\n            .catch(e => console.log(e))\n\n    return (\n        <StyledLi>\n            <div>\n                <StyledDate>\n                    {new Date(order.createdOn).toLocaleString('en-US')}\n                </StyledDate>\n                <ul>\n                    <li>Has paid: {hasPaid ? 'Yes' : 'No'}</li>\n                    <li>Has shipped: {hasShipped ? 'Yes' : 'No'}</li>\n                    <li>\n                        <strong>${order.total}</strong>\n                    </li>\n                </ul>\n            </div>\n            <ul>\n                {order.items.map(item => (\n                    <li key={item.type}>\n                        {item.type} x {item.quantity}\n                    </li>\n                ))}\n            </ul>\n            <StyledAddress>\n                <strong>{order.name}</strong>\n                <br />\n                <a href={`mailto:${order.email}`}>{order.email}</a>\n                <br />\n                {order.streetAddress}\n                <br />\n                {order.city}\n                <br />\n                {order.state}\n                <br />\n                {order.zip}\n                <br />\n            </StyledAddress>\n            <StyledDiv>\n                <button\n                    className=\"button positive\"\n                    type=\"button\"\n                    onClick={updateShipped}\n                >\n                    Toggle Shipped\n                </button>\n                <button className=\"button\" type=\"button\" onClick={updatePaid}>\n                    Toggle Paid\n                </button>\n                <button className=\"button danger\" type=\"button\">\n                    Delete Order\n                </button>\n            </StyledDiv>\n        </StyledLi>\n    )\n}\n","import styled from 'styled-components'\nimport Order from './Order.js'\n\nconst StyledPage = styled.main`\n    overflow-y: scroll;\n`\n\nconst StyledUl = styled.ul`\n    padding: var(--base-spacing) !important;\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 1rem;\n`\n\nexport default function Orders({ orders, token }) {\n    return (\n        <StyledPage>\n            <StyledUl>\n                {orders &&\n                    orders.map(order => (\n                        <Order token={token} order={order} key={order.id} />\n                    ))}\n            </StyledUl>\n        </StyledPage>\n    )\n}\n","import styled from 'styled-components'\nimport { useState } from 'react'\nimport Header from './components/Header.js'\nimport SideNav from './components/SideNav.js'\nimport Inventory from './components/Inventory.js'\nimport Orders from './components/Orders.js'\n\nconst StyledDashboard = styled.div`\n    display: flex;\n    flex-flow: column nowrap;\n    padding-top: 4rem;\n    padding-left: 16vw;\n    height: 100vh;\n    overflow: hidden;\n`\n\nexport default function Dashboard({ inv, orders, token, logout }) {\n    const [page, setPage] = useState('inventory')\n\n    return (\n        <StyledDashboard>\n            <Header text=\"Zircus Admin Dashboard\" logout={logout} />\n            <SideNav page={page} setPage={setPage} />\n            {page === 'inventory' && <Inventory inv={inv} token={token} />}\n            {page === 'orders' && <Orders orders={orders} token={token} />}\n        </StyledDashboard>\n    )\n}\n","import Login from './Login.js'\nimport Dashboard from './Dashboard.js'\nimport { useEffect, useState } from 'react'\nimport { getInv, getOrders } from './services/services.js'\n\nfunction App() {\n    const [user, setUser] = useState(null)\n    const [token, setToken] = useState(null)\n    const [inv, setInv] = useState(null)\n    const [orders, setOrders] = useState(null)\n\n    const logout = () => {\n        setUser(null)\n        setToken(null)\n        localStorage.removeItem('user')\n        localStorage.removeItem('token')\n    }\n\n    useEffect(() => {\n        getInv()\n            .then(reply => setInv(reply.data))\n            .catch(() => setInv(null))\n        getOrders(token)\n            .then(reply => setOrders(reply.data))\n            .catch(() => setOrders(null))\n    }, [setInv, token])\n\n    return token ? (\n        <Dashboard inv={inv} orders={orders} token={token} logout={logout} />\n    ) : (\n        <Login setUser={setUser} setToken={setToken} />\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}