@import url("https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;700&family=Nunito+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&family=Nunito:ital,wght@0,300;0,400;0,600;0,700;0,800;0,900;1,300;1,400;1,600;1,700;1,800;1,900&display=swap");
:root {
  --gray-05: #ffffff;
  --gray-10: #f9f8fa;
  --gray-20: #f3f0f4;
  --gray-30: #e4e0e6;
  --gray-40: #d6cfd8;
  --gray-50: #c6bfc9;
  --gray-60: #b8afba;
  --gray-70: #b8afba;
  --gray-80: #9a8f9e;
  --gray-90: #8b808f;
  --dgray-10: #5a525e;
  --dgray-20: #514a55;
  --dgray-30: #4b414d;
  --dgray-40: #413944;
  --dgray-50: #39313c;
  --dgray-60: #302a33;
  --dgray-70: #29222b;
  --dgray-80: #211b22;
  --dgray-90: #19141a;
  --black: #000000;
  --white: #ffffff;
  --text-color: #211b22;
  --invert-text-color: var(--white);
  --link: #45576e;
  --link-hover: #283341;
  --link-visited: #553a7b;
  --link-visited-hover: #491845;
  --teal: #82dbd7;
  --purple: #553a7b;
  --yellow: #f6cb5a;
  --dark-yellow: #c5a249;
  --green: #589959;
  --dark-green: #3d6b3e;
  --red: #8f3342;
  --dark-red: #5b2538;
  --content-xs: 304px;
  --content-sm: 432px;
  --content-md: 688px;
  --content-lg: 928px;
  --content-xl: 1152px;
  --content-max: 1440px;
  --screen-xs: 320px;
  --screen-sm: 480px;
  --screen-md: 768px;
  --screen-lg: 1024px;
  --screen-xl: 1312px;
  --gradient-warm: linear-gradient(
    45deg,
    #f5156c,
    #ff3750,
    #ff4f5e,
    #ff7139,
    #ff980e
  );
  --gradient-cool: linear-gradient(90deg, #3a8ee6, #9059ff, #c139e6);
  --gradient-highlight: linear-gradient(90deg, #ffffff, #fff44f);
  --blockquote-gradient: linear-gradient(
    to right,
    var(--gray-30),
    var(--gray-20)
  );
  --spacing-xs: 4px;
  --spacing-sm: 8px;
  --spacing-md: 16px;
  --spacing-lg: 24px;
  --spacing-xl: 32px;
  --spacing-2xl: 48px;
  --layout-2xs: 16px;
  --layout-xs: 24px;
  --layout-sm: 32px;
  --layout-md: 48px;
  --layout-lg: 64px;
  --layout-xl: 96px;
  --layout-2xl: 192px;
  --border-radius-xs: 2px;
  --border-radius-sm: 4px;
  --border-radius-md: 8px;
  --border-radius-lg: 16px;
  --box-shadow-sm: 0 8px 12px 1px rgba(29, 17, 51, 0.04),
    0 3px 16px 2px rgba(9, 32, 77, 0.12), 0 5px 10px -3px rgba(29, 17, 51, 0.12);
  --box-shadow-md: 0 16px 24px 2px rgba(29, 17, 51, 0.04),
    0 6px 32px 4px rgba(9, 32, 77, 0.12), 0 8px 12px -5px rgba(29, 17, 51, 0.12);
  --box-shadow-lg: 0 24px 38px 3px rgba(29, 17, 51, 0.04),
    0 10px 48px 8px rgba(9, 32, 77, 0.12),
    0 12px 16px -6px rgba(29, 17, 51, 0.12);
  --std-lborder: 2px solid var(--gray-05);
  --std-pborder: 2px solid var(--dgray-90);
  --thin-lborder: 1px solid var(--gray-05);
  --thin-pborder: 1px solid var(--dgray-90);
  --code-border: 0.5rem solid var(--gray-90);
  --default-border-radius: 6px;
  --radius: 0.325rem;
  --big-radius: 1.25rem;
  --heading-font-family: "Nunito", sans-serif;
  --site-font-family: "Nunito Sans", sans-serif;
  --code-font-family: "Fira Code", monospace;
  --base-font-size: 100%;
  --doc-line-height: 1.75;
  --code-line-height: 1.4;
  --heading-line-height: 1.2;
  --xxl-font-size: 3.052rem;
  --xl-font-size: 2.441rem;
  --lg-font-size: 1.953rem;
  --md-font-size: 1.563rem;
  --sm-font-size: 1.25rem;
  --xxl-font-size-mobile: 1.802rem;
  --xl-font-size-mobile: 1.602rem;
  --lg-font-size-mobile: 1.424rem;
  --md-font-size-mobile: 1.266rem;
  --sm-font-size-mobile: 1.125rem;
  --default-font-size: 1rem;
  --small-font-size: 0.85rem;
  --tiny-text: 0.75rem;
  --max-line-length-fallback: 45rem;
  --base-unit: 6px;
  --base-spacing: calc(var(--base-unit) * 4);
  --md-spacing: calc(var(--base-spacing) * 2);
  --lg-spacing: calc(var(--md-spacing) * 2);
  --base-section-spacing: calc(var(--base-spacing) * 2) var(--base-spacing);
  --btn-padding: 8px 16px;
  --input-padding: 8px; }

/* See https://hankchizljaw.com/wrote/a-modern-css-reset/ */
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box; }

/* Remove default padding */
ul[class],
ol[class] {
  padding: 0; }

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
h5,
p,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: ""; }

blockquote,
q {
  quotes: "" ""; }

audio,
video,
canvas {
  display: inline-block; }

/* Set core body defaults */
body {
  min-height: 100vh;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.5; }

/* Remove list styles on ul, ol elements with a class attribute */
ul[class],
ol[class] {
  list-style: none; }

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

iframe,
a img {
  border: 0; }

/* Make images easier to work with */
img {
  max-width: 100%;
  display: block; }

/* Natural flow and rhythm in articles by default */
article > * + * {
  margin-top: 1em; }

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit; }

hr {
  border: 0 solid var(--gray-20);
  border-top-width: 4px;
  margin: 48px 0; }

@media (min-width: 1024px) {
  hr {
    margin: 64px 0; } }

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  /* We are relaxing the `declaration-no-important` here
     because we want to ensure that code further down the
     cascade will adhere to this accessibility enhancement */
  /* stylelint-disable declaration-no-important */
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important; } }

/* Used with flexbox and grid. The new syntax is to use `gap`, but here
   we also provide the fallback of `grid-gap`. This is also why we need
   the stylelint-disable-line as the order is important */
/*
 * A simply utility for setting a max width on an element that constrains its
 * width to what is commonly known to be a readable line length for prose.
 */
/* 
 * Hide an element visually, but not from screen readers
 * Use this mixin sparingly to avoid unnecessary code bloat
 * Instead, use the class `visually-hidden` directly on the
 * relevant element or component.
 */
/* A common reset for `ol` and `ul` elements  */
/* 
 * Sets base, hover, focus and active state styles for solid buttons.
 * @param `$bg-color` - background color for default state [default: `$mdn-blue600`]
 * @param `$bg-hover-color` - background color for hover and focus state [default: `$mdn-blue700`]
 * @param `$bg-active-color` - background color for active state [default: `$bg-color`]
 * @param `$text-color` - foreground text color [default: `$text-color-inverted`]
 * @param `$text-hover-color` - foreground text color for hover state [default: null]
 */
/* 
 * Sets base, hover, focus and active state styles for outline style buttons.
 * @param `$bg-color` - background color for default state [default: `$white`]
 * @param `$bg-hover-color` - background and border color for hover state [default: `null`]
 * @param `$bg-active-color` - background and border color for active state [default: `null`]
 * @param `$border-color` - border color [default: `$mdn-blue600`]
 * @param `$text-color` - text color [default: `$border-color`]
 * @param `$text-hover-color` - text color for hover state [default: $mdn-blue600]
 */
/* 
 * Returns a simple border with the default thickness and color or using those specified.
 * @param `$border-thickness` - border thickness [default: `2px`]
 * @param `$border-color` - the color of the border [default: `$mdn-blue700`]
 */
h1,
h2,
h3,
h4,
h5 {
  font-family: var(--heading-font-family);
  letter-spacing: 0.1rem;
  font-weight: 500;
  line-height: var(--heading-line-height); }

h3,
h4,
h5 {
  font-weight: normal; }

h4,
h5 {
  line-height: var(--heading-line-height); }

h1 {
  font-size: var(--xxl-font-size-mobile); }
  @media screen and (min-width: 901px) {
    h1 {
      font-size: var(--xxl-font-size); } }

h2 {
  font-size: var(--xl-font-size-mobile); }
  @media screen and (min-width: 901px) {
    h2 {
      font-size: var(--xl-font-size); } }

h3 {
  font-size: var(--lg-font-size-mobile); }
  @media screen and (min-width: 901px) {
    h3 {
      font-size: var(--lg-font-size); } }

h4 {
  font-size: var(--md-font-size-mobile); }
  @media screen and (min-width: 901px) {
    h4 {
      font-size: var(--md-font-size); } }

h5 {
  font-size: var(--sm-font-size-mobile); }
  @media screen and (min-width: 901px) {
    h5 {
      font-size: var(--sm-font-size); } }

p {
  margin-bottom: var(--content-block-margin); }

.smaller-text {
  font-size: var(--small-text-size); }

.tiny-text {
  font-size: var(--tiny-text); }

.slab-highlight {
  background-color: var(--gray-90);
  color: var(--gray-05);
  font-family: var(--heading-font-family);
  font-weight: normal;
  max-width: max-content;
  padding: 0 var(--base-unit); }

.readable-line-length {
  max-width: var(--max-line-length-fallback);
  max-width: 85ch; }

/* text links */
a:link,
a:visited {
  color: var(--link);
  text-decoration: none; }
  a:link:hover, a:link:focus, a:link:active,
  a:visited:hover,
  a:visited:focus,
  a:visited:active {
    text-decoration: underline; }

blockquote {
  max-width: var(--max-line-length-fallback);
  max-width: 85ch;
  font-size: var(--sm-font-size-mobile);
  font-family: var(--heading-font-family);
  font-weight: normal;
  margin-bottom: var(--base-spacing);
  /*
   * Turn off bottom margins on the last paragraph element inside
   * a blockquote. This also conveniently works for instances where
   * there is only a single paragraph element.
   */ }
  @media screen and (min-width: 901px) {
    blockquote {
      font-size: var(--sm-font-size); } }
  blockquote::before, blockquote::after {
    background-image: var(--blockquote-gradient);
    content: "";
    display: block;
    height: 2px;
    margin-bottom: calc(var(--base-spacing) / 2); }
  blockquote::after {
    margin-top: calc(var(--base-spacing) / 2); }
  blockquote p:last-of-type {
    margin-bottom: 0; }

.button,
a.button {
  background-color: var(--dgray-90);
  border: 2px solid var(--dgray-90);
  color: var(--gray-10);
  border-radius: var(--radius);
  cursor: pointer;
  display: block;
  font-weight: bold;
  font-size: var(--small-font-size);
  min-height: 1.5rem;
  padding: var(--btn-padding);
  text-decoration: none; }
  .button:hover, .button:focus,
  a.button:hover,
  a.button:focus {
    background-color: var(--dgray-50);
    border-color: var(--dgray-50); }
  .button:active,
  a.button:active {
    background-color: var(--dgray-90);
    border-color: var(--dgray-90); }
  .button:hover, .button:focus, .button:active,
  a.button:hover,
  a.button:focus,
  a.button:active {
    text-decoration: none; }

.outline,
a.outline {
  background-color: var(--gray-05);
  border-color: var(--dgray-90);
  color: var(--dgray-90); }
  .outline:hover, .outline:focus,
  a.outline:hover,
  a.outline:focus {
    color: var(--gray-05); }

.danger,
a.danger {
  background-color: var(--red);
  border: 2px solid var(--red);
  color: var(--gray-10); }
  .danger:hover, .danger:focus,
  a.danger:hover,
  a.danger:focus {
    background-color: var(--dark-red);
    border-color: var(--dark-red); }
  .danger:active,
  a.danger:active {
    background-color: var(--red);
    border-color: var(--red); }
  .danger.outline,
  a.danger.outline {
    background-color: var(--gray-05);
    border-color: var(--red);
    color: var(--red); }
    .danger.outline:hover, .danger.outline:focus,
    a.danger.outline:hover,
    a.danger.outline:focus {
      background-color: var(--dark-red);
      border-color: var(--dark-red);
      color: var(--gray-05); }
    .danger.outline:active,
    a.danger.outline:active {
      background-color: var(--red);
      border-color: var(--red); }

.positive,
a.positive {
  background-color: var(--green);
  border: 2px solid var(--green);
  color: var(--gray-10); }
  .positive:hover, .positive:focus,
  a.positive:hover,
  a.positive:focus {
    background-color: var(--dark-green);
    border-color: var(--dark-green); }
  .positive:active,
  a.positive:active {
    background-color: var(--green);
    border-color: var(--green); }
  .positive.outline,
  a.positive.outline {
    background-color: var(--gray-05);
    border-color: var(--green);
    color: var(--green); }
    .positive.outline:hover, .positive.outline:focus,
    a.positive.outline:hover,
    a.positive.outline:focus {
      background-color: var(--dark-green);
      border-color: var(--dark-green);
      color: var(--gray-05); }
    .positive.outline:active,
    a.positive.outline:active {
      background-color: var(--green);
      border-color: var(--green); }

.light,
a.light {
  background-color: var(--gray-10);
  border: 2px solid var(--gray-10);
  color: var(--dgray-90); }
  .light:hover, .light:focus,
  a.light:hover,
  a.light:focus {
    background-color: var(--gray-30);
    border-color: var(--gray-30); }
  .light:active,
  a.light:active {
    background-color: var(--gray-10);
    border-color: var(--gray-10); }
  .light.outline,
  a.light.outline {
    background-color: transparent;
    border-color: var(--gray-10);
    color: var(--gray-10); }
    .light.outline:hover, .light.outline:focus,
    a.light.outline:hover,
    a.light.outline:focus {
      background-color: var(--gray-10);
      border-color: var(--gray-10);
      color: var(--dgray-90); }
    .light.outline:active,
    a.light.outline:active {
      background-color: var(--gray-10);
      border-color: var(--gray-10); }

.inactive,
a.inactive {
  background-color: var(--gray-50);
  border: 2px solid var(--gray-50);
  color: var(--gray-80);
  cursor: default; }
  .inactive:hover, .inactive:focus,
  a.inactive:hover,
  a.inactive:focus {
    background-color: var(--gray-50);
    border-color: var(--gray-50); }
  .inactive:active,
  a.inactive:active {
    background-color: var(--gray-50);
    border-color: var(--gray-50); }
  .inactive:hover, .inactive:focus,
  a.inactive:hover,
  a.inactive:focus {
    color: var(--gray-80);
    text-decoration: none; }

.minimal,
a.minimal {
  display: inline-block;
  font-size: var(--small-font-size);
  font-weight: normal;
  min-height: inherit;
  padding: var(--btn-padding); }
  @media screen and (min-width: 901px) {
    .minimal,
    a.minimal {
      padding: var(--btn-padding); } }

.icon-button {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: var(--input-padding); }
  .icon-button svg {
    fill: currentColor;
    height: 1rem; }

form .field-group {
  margin-bottom: 20px; }
  form .field-group.inline {
    display: inline-block;
    margin-right: 20px; }

form .field-note {
  color: var(--gray-80);
  font-size: var(--small-font-size); }

fieldset {
  border: none;
  margin: 20px 0;
  padding-bottom: 0; }

fieldset.bordered {
  border: 2px solid var(--gray-30); }

legend.highlighted {
  background-color: var(--gray-80);
  color: var(--white);
  padding: 10px 4px; }
  legend.highlighted code {
    background-color: transparent; }

legend.emphasized {
  font-weight: bold;
  padding: 10px 0; }

label {
  display: block;
  margin-bottom: 5px; }

label.inline {
  display: inline-block; }

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
  border-radius: var(--radius); }

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

[type="checkbox"],
[type="radio"] {
  border-radius: 4px; }

[type="radio"] {
  border-radius: 100%; }

textarea[cols],
input[size] {
  min-width: 0; }

input[size="2"] {
  max-width: calc(2.5ch + 16px); }

input[size="3"] {
  max-width: calc(3.5ch + 16px); }

input[type="search"] {
  background-image: url("data:image/svg+xml,%3Csvg width='24px' height='24px' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(3.000000, 3.000000)' stroke='%239595a3' stroke-width='2'%3E%3Ccircle cx='7' cy='7' r='7'%3E%3C/circle%3E%3Cpath d='M12,12 L18,18' stroke-linecap='round'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: left 8px top 50%;
  padding: 8px 8px 8px calc(1.5em + 16px); }

input[type="search"]:hover {
  background-image: url("data:image/svg+xml,%3Csvg width='24px' height='24px' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(3.000000, 3.000000)' stroke='%230250bb' stroke-width='2'%3E%3Ccircle cx='7' cy='7' r='7'%3E%3C/circle%3E%3Cpath d='M12,12 L18,18' stroke-linecap='round'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E"); }

input[type="search"]:focus {
  background-image: url("data:image/svg+xml,%3Csvg width='24px' height='24px' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(3.000000, 3.000000)' stroke='%230060df' stroke-width='2'%3E%3Ccircle cx='7' cy='7' r='7'%3E%3C/circle%3E%3Cpath d='M12,12 L18,18' stroke-linecap='round'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E"); }

[dir="rtl"] input[type="search"] {
  background-position: right 8px top 50%;
  padding: 8px calc(1.5em + 16px) 8px 8px; }

input[size="4"] {
  max-width: calc(4.5ch + 16px); }

input[size="5"] {
  max-width: calc(5.5ch + 16px); }

select,
[type="tel"],
[type="number"],
[type="text"],
[type="email"],
[type="url"],
[type="password"],
textarea {
  border: 2px solid var(--dgray-90);
  border-radius: var(--radius);
  padding: var(--input-padding);
  font-size: var(--small-font-size); }

select:focus, select:active,
[type="tel"]:focus,
[type="tel"]:active,
[type="text"]:focus,
[type="text"]:active,
[type="number"]:focus,
[type="number"]:active,
[type="email"]:focus,
[type="email"]:active,
[type="url"]:focus,
[type="url"]:active,
[type="password"]:focus,
[type="password"]:active {
  border-color: var(--link);
  outline: 0; }

select.valid,
[type="tel"].valid,
[type="text"].valid,
[type="number"].valid,
[type="email"].valid,
[type="url"].valid,
[type="password"].valid {
  border-color: var(--green);
  outline: 2px dashed var(--green);
  outline-offset: 3px; }

select.invalid,
[type="tel"].invalid,
[type="text"].invalid,
[type="number"].invalid,
[type="email"].invalid,
[type="url"].invalid,
[type="password"].invalid {
  border-color: var(--red);
  outline: 2px dashed var(--red);
  outline-offset: 3px; }

textarea {
  min-height: 120px;
  min-width: 350px; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }

input[type="color"],
input[type="file"] {
  background: var(--white);
  border-radius: 4px;
  border: 2px solid var(--gray-50);
  line-height: 1.25;
  margin: 0 0 24px; }

input[type="color"]:hover,
input[type="file"]:hover {
  border-color: var(--link); }

input[type="color"]:focus,
input[type="file"]:focus {
  border-color: var(--link);
  outline: none; }

.mzp-is-error input[type="color"],
.mzp-is-error input[type="file"] {
  border-color: var(--red);
  box-shadow: none; }

.mzp-is-error input[type="color"]:hover,
.mzp-is-error input[type="file"]:hover {
  border-color: var(--red); }

.mzp-is-error input[type="color"]:focus,
.mzp-is-error input[type="file"]:focus {
  border-color: var(--red); }

input[type="color"]:disabled,
input[type="color"][aria-disabled="true"],
input[type="file"]:disabled,
input[type="file"][aria-disabled="true"] {
  background: var(--gray-20);
  border-color: var(--gray-20);
  color: var(--gray-60); }

input[type="color"]:disabled:focus,
input[type="color"][aria-disabled="true"]:focus,
input[type="file"]:disabled:focus,
input[type="file"][aria-disabled="true"]:focus {
  border-color: var(--gray-80); }

input[type="file"] {
  padding: var(--input-padding); }

textarea {
  height: auto; }

select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  background-color: var(--white);
  line-height: 1.25;
  margin: 0 0 24px;
  padding: var(--input-padding);
  background-image: url("data:image/svg+xml,%3Csvg width='24px' height='24px' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline stroke='%239595a3' stroke-width='2' points='5 9 12 16 19 9'%3E%3C/polyline%3E%3C/g%3E%3C/svg%3E"), linear-gradient(to bottom, var(--white) 0%, var(--white) 100%);
  background-repeat: no-repeat, repeat;
  background-size: 1.5em auto, 100%;
  display: block;
  font-weight: normal;
  max-width: 100%;
  min-width: 256px;
  text-overflow: ellipsis; }

select {
  background-position: right 8px top 50%;
  padding: 8px calc(1.5em + 16px) 8px 8px; }

[dir="rtl"] select {
  background-position: left 8px top 50%;
  padding: 8px 8px 8px calc(1.5em + 16px); }

select[multiple],
select[multiple]:hover,
select[multiple]:focus {
  background: var(--white);
  padding: var(--input-padding); }

select::-ms-expand {
  display: none; }

select:hover {
  border-color: var(--link);
  background-image: url("data:image/svg+xml,%3Csvg width='24px' height='24px' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline stroke='%230250bb' stroke-width='2' points='5 9 12 16 19 9'%3E%3C/polyline%3E%3C/g%3E%3C/svg%3E"), linear-gradient(to bottom, var(--white) 0%, var(--white) 100%); }

select:focus {
  border-color: var(--link);
  background-image: url("data:image/svg+xml,%3Csvg width='24px' height='24px' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline stroke='%230060df' stroke-width='2' points='5 9 12 16 19 9'%3E%3C/polyline%3E%3C/g%3E%3C/svg%3E"), linear-gradient(to bottom, var(--white) 0%, var(--white) 100%);
  box-shadow: 0 0 0 2px rgba(0, 144, 237, 0.5);
  color: var(--gray-90);
  outline: none; }

select:disabled,
select[aria-disabled="true"] {
  background-image: url("data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E"), linear-gradient(to bottom, var(--gray-20) 0%, var(--gray-20) 100%); }

select option {
  font-weight: normal; }

.icon {
  background-position: 0 0;
  background-repeat: no-repeat;
  background-size: 21px;
  content: "";
  display: inline-block;
  height: 21px;
  margin-right: calc(var(--base-spacing) / 4);
  vertical-align: sub;
  width: 21px; }

h2 .icon,
h3 .icon,
h4 .icon {
  margin-left: calc(var(--base-spacing) / 4);
  vertical-align: middle; }

/* icon color styles to be applied to SVG elements */
.experimental,
.non-standard {
  fill: var(--link); }

.warning,
.deprecated {
  fill: var(--yellow); }

.obsolete {
  fill: var(--red); }

/* https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd */
kbd {
  background: var(--gray-10);
  background-color: var(--gray-20);
  border: 1px solid var(--gray-20);
  border-radius: var(--default-border-radius);
  font-family: var(--code-font-family);
  font-size: var(--small-font-size);
  font-weight: bold;
  line-height: 1;
  margin: calc(var(--base-unit) / 2);
  padding: calc(var(--base-spacing) / 6) calc(var(--base-spacing) / 4);
  white-space: nowrap; }

/*
 * When used inside a table, give it a little more margin
 * see: https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/Keyboard_shortcuts
 */
table kbd {
  margin: calc(var(--base-spacing) / 4); }

a {
  color: var(--link);
  text-decoration: none;
  font-weight: 500; }
  a:hover, a:focus {
    text-decoration: underline; }
  a code {
    text-decoration-skip-ink: none; }

/* 
 * Utility class for highlighting a link state such
 * as :hover, :focus, :active etc.
 * Prefer using the class over directly using the mixin
 * to avoid unnecessary code duplication
 */
.highlighted-link-state {
  background-color: var(--dark-blue);
  color: var(--gray-05); }

dl dt {
  font-weight: bold; }

dl dd {
  margin: 0 var(--base-spacing) var(--base-spacing); }

.flex-list {
  display: flex;
  flex-wrap: wrap;
  gap: var(--base-spacing); }
  .flex-list.styled {
    margin: var(--base-spacing) 0;
    padding-left: calc(var(--base-spacing) * 2); }
  .flex-list li {
    flex-basis: 45%; }

ul.flex-list.styled li {
  list-style-type: disc; }

ol.flex-list.styled li {
  list-style-type: decimal; }

pre {
  background-color: var(--gray-20);
  border-left: var(--code-border);
  font-size: var(--code-base-font-size);
  line-height: var(--code-line-height);
  margin: 0 0 var(--base-spacing);
  max-width: 100%;
  overflow: auto;
  padding: var(--base-spacing);
  width: 100%; }

table {
  border: var(--std-lborder);
  font-size: var(--small-font-size);
  overflow-x: auto;
  width: 100%; }
  @media screen and (min-width: 901px) {
    table {
      font-size: var(--default-font-size); } }
  table th {
    background-color: var(--gray-30);
    border: 0;
    border-bottom: var(--std-lborder); }
  table td {
    background-color: var(--gray-10);
    border: 0;
    border-bottom: var(--std-lborder); }
  table th,
  table td {
    border-left: var(--std-lborder);
    padding: calc(var(--base-spacing) / 2);
    text-align: left; }
    table th:first-child,
    table td:first-child {
      border-left: 0;
      min-width: 150px; }
      @media screen and (min-width: 1281px) {
        table th:first-child,
        table td:first-child {
          min-width: 200px; } }
  table tr:last-child td {
    border-bottom: 0; }
  table pre {
    background-color: var(--gray-30); }
  table caption {
    font-size: var(--sm-font-size-mobile);
    font-family: var(--heading-font-family);
    letter-spacing: 0.1rem;
    font-weight: 500;
    line-height: var(--heading-line-height);
    font-weight: bold;
    margin-bottom: calc(var(--base-spacing) / 2); }
    @media screen and (min-width: 901px) {
      table caption {
        font-size: var(--sm-font-size); } }

/*
 * Standard table styles. For an example see:
 * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#Events
 */
table,
.properties {
  border-collapse: collapse;
  margin-bottom: var(--base-spacing); }
  table code,
  .properties code {
    background-color: transparent;
    hyphens: auto; }

/* 
 * Hide an element visually, but not from screen readers
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  /* !important required to ensure element is hidden when mixin is applied */
  position: absolute !important;
  /* stylelint-disable-line declaration-no-important */
  width: 1px; }

/* Hides without affecting the document layout */
.hide {
  visibility: hidden; }

/* Hide from everyone */
.hidden {
  display: none; }

/* Show for everyone */
.show {
  display: block; }

/* Like `.show` but for flex containers */
.show-flex {
  display: flex; }

.details .is-summary button,
details .is-summary button {
  color: inherit;
  cursor: pointer;
  background: transparent;
  font-family: inherit;
  font-weight: inherit;
  font-size: inherit;
  text-align: inherit;
  border: 0;
  width: 100%;
  position: relative; }

.details .is-closed[aria-hidden="true"],
details .is-closed[aria-hidden="true"] {
  display: none; }

summary,
details .is-summary button,
.mzp-c-details .is-summary button {
  position: relative; }

summary,
details .is-summary button,
.details .is-summary button {
  padding-right: 48px; }

[dir="rtl"] summary,
[dir="rtl"] details .is-summary button,
[dir="rtl"] .details .is-summary button {
  padding-right: 0;
  padding-left: 48px; }

summary:before,
details .is-summary button:before,
.details .is-summary button:before {
  background: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg stroke='%23000' stroke-width='2' fill='none' fill-rule='evenodd' stroke-linecap='round'%3E%3Cpath d='M12 3.515v16.97M3.515 12h16.97'/%3E%3C/g%3E%3C/svg%3E") top left no-repeat;
  -webkit-background-size: 20px, 20px;
  background-size: 20px, 20px;
  -webkit-transition: transform 100ms ease-in-out;
  transition: transform 100ms ease-in-out;
  content: "";
  height: 20px;
  margin-top: -8px;
  position: absolute;
  top: 50%;
  width: 20px; }

summary:before,
details .is-summary button:before,
.details .is-summary button:before {
  right: 8px; }

[dir="rtl"] summary:before,
[dir="rtl"] details .is-summary button:before,
[dir="rtl"] .details .is-summary button:before {
  right: auto;
  left: 8px; }

details[open] summary:before,
details .is-summary button[aria-expanded="true"]:before,
.details .is-summary button[aria-expanded="true"]:before {
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg); }

summary::-webkit-details-marker {
  display: none; }

code {
  background-color: var(--gray-20);
  box-decoration-break: clone;
  font-family: var(--code-font-family);
  padding: 0 calc(var(base-unit) / 2);
  white-space: nowrap;
  word-wrap: break-word; }

pre code {
  white-space: pre; }

.notranslate code {
  background-color: transparent; }

.example-bad {
  background-color: var(--red);
  border-color: var(--red); }

.example-good {
  background-color: var(--green);
  border-color: var(--green); }
